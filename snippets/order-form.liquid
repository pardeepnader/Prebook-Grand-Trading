{% comment %}BB Attempt to test all variant cycle {% endcomment %}
<form action="/cart" method="post">
  <table>
    <tbody>  
      {% comment %}<tr class="titlecell">
      <td colspan="3" class="nullcell"></td> 
      <td class="lastcell cellqty">QTY</td>{% endcomment %}

      </tr>
      {% if product.available %}
      {% for variant in product.variants %}
      {% if variant.available %}
      {% assign thiscounter = thiscounter | plus:1 %}
      {% if thiscounter == 1 %}<tr class="trwhite"><td class="align_middle">{% if product.options.size == 1 %}
      {{ product.options }}
      {% endif %}
      </td><td class="align_middle">Price</td>
      <td class="align_middle">QTY</td></tr>{% endif %}
      <tr class="{% cycle 'pure-table-odd', 'pure-table-even' %}">
        <td class="align_middle">
          {% unless variant.title contains 'Default' %}{{ variant.title }}{% endunless %} 
        </td>
        <td class="align_middle">
          {{ variant.price | money }}
        </td>
        {% comment %}<td class="align_right">
        On hand: {{ variant.inventory_quantity }}
        </td>{% endcomment %}
        <td class="lastcell">
          <input type="button" onclick="decrementValue(this.getAttribute('data-myattr'))" data-myattr="{{ variant.id }}" value="-" /> 
          <input name="updates[{{ variant.id }}]" onfocus="this.select()" class="quantity field" min="0" id="{{ variant.id }}" {% if settings.limit_quantity and variant.inventory_management != blank and variant.inventory_policy == "deny" %} max="{{ variant.inventory_quantity }}"{% endif %} type="text" value="0" tabindex="1" />
          <input type="button" onclick="incrementValue(this.getAttribute('data-myattr'))" data-myattr="{{ variant.id }}" value="+" />
        </td>

      </tr>
      {% endif %}
      {% endfor %}
      {% endif %}
    </tbody>
  </table>


  <div>
    <!-- 	<input type="submit" value="Add to the cart" class="ajax-submit"/> -->
    <div class="purchase-details">
      <div class="purchase-details__buttons purchase-details__spb--{{ show_payment_button }} {% if product.available == false %}product-is-unavailable{% endif %}">
        {% if settings.cart_action == 'reload_page' %}
        <input type="hidden" name="return_to" value="back" />
        {% elsif settings.cart_action == 'redirect_checkout' %}
        <input type="hidden" name="return_to" value="/checkout" />
        {% endif %}

        {% capture add_to_cart_label %}{% if collection_handles contains 'pre-order' %}{{ 'collections.general.pre_order' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endif %}{% endcapture %}
        <button type="{% if settings.cart_action == 'ajax' %}button{% else %}submit{% endif %}" name="add" class="{% if settings.cart_action == 'ajax' %} ajax-submit {% endif %}action_button add_to_cart {% if show_payment_button %} action_button--secondary {% endif %} {% if product.available == false %}disabled{% endif %}" data-label={{ add_to_cart_label | json }}>
          <span class="text">
            {% if product.available %}{{ add_to_cart_label }}{% else %}{{ settings.sold_out_text }}{% endif %}
          </span>
          <svg x="0px" y="0px" width="32px" height="32px" viewBox="0 0 32 32" class="checkmark">
            <path fill="none" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" d="M9,17l3.9,3.9c0.1,0.1,0.2,0.1,0.3,0L23,11"/>
          </svg>
        </button>
        {% if show_payment_button %}
        {{ form | payment_button }}
        {% endif %}
      </div>
    </div>
  </div>
</form> 
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>
  jQuery(function($) {
    $('table .quantity:first').focus();
    $('[max]').change(function() {
      var max = parseInt($(this).attr('max'), 10);
      var value = parseInt($(this).val(), 10) || 0;
      if (value > max) { 
        alert('We only have ' + max + ' of this item in stock');
        $(this).val(max); 
      }    
    });
  });


  function refreshCart(cart) {
    $(".cart_count").empty();
    $cartBtn = $(".cart_count");
    var value = $cartBtn.text() || '0';
    var cart_items_html = "";
    var cart_discounts_html = "";
    var cart_action_html = "";
    var cart_savings_html = "";
    var $cart_form = $('[data-cart-form]');
    var productHasSale = false;
    var productCompareAtPrice = 0;
    var productFinalPrice = 0;

    $cart_form.data('total-discount', cart.total_discount);

    $cartBtn.text(value.replace(/[0-9]+/,cart.item_count));

    if (cart.item_count == 0) {
      $('.js-empty-cart__message').removeClass('hidden');
      $cart_form.addClass('hidden');
    } else {
      $('.js-empty-cart__message').addClass('hidden');
      $cart_form.removeClass('hidden');

      var total_saving = 0; // adding counter variables for total cart savings
      var saving = 0;

      $.each(cart.items, function(index, item) {
        var itemDiscounts = item.discounts;
        var discountMessage = "";

        for (i=0; i < itemDiscounts.length; i++) {
          var amount = Shopify.formatMoney(itemDiscounts[i].amount, $('body').data('money-format'));
          var title = itemDiscounts[i].title;
          discountMessage = '<p class="notification-discount meta">' + title + '</p>';
        }
        var line_id = index + 1;

        cart_items_html += '<li class="mini-cart__item clearfix" data-cart-item data-line-id="' + line_id + '" data-variant-id="' + item.id + '">' +
          '<a href="' + item.url +'">';
        if (item.image) {
          cart_items_html += '<div class="cart_image">' +
            '<img src="' + item.image.replace(/(\.[^.]*)$/, "_compact$1").replace('http:', '') + '" alt="' + htmlEncode(item.title) + '" />' +
            '</div></a>';
        }

        cart_items_html += '<div class="mini-cart__item--content"><div class="mini-cart__item__title"><div class="item_title"><a href="' + item.url + '">' + item.title + '</a></div>';

        if(item.properties) {
          $.each(item.properties, function(title, value) {
            if (value) {
              cart_items_html += '<div class="line-item">' + title +': ' + value + ' </div>';
            }
          });
        }

        cart_items_html += '<strong class="right price">';

        $.ajax({
          dataType: "json",
          async: false,
          cache: false,
          url: "/products/" + item.handle + ".js",
          success: function(data) {
            // If item has more than one variant, need to make sure we are pulling data from the correct variant
            if (data.variants) {
              var itemVariants = data.variants;
              if (itemVariants.length > 1) {
                for (v = 0; v < itemVariants.length; v++) {
                  if (itemVariants[v].id == item.id) {
                    var data = itemVariants[v];
                  }
                }
              }
            }

            // If compare at price exists then item is on sale
            if (data.compare_at_price) {
              if(data.compare_at_price > data.price) {
                productHasSale = true;
                productCompareAtPrice = data.compare_at_price;
                productFinalPrice = data.price;
              }
            } else {
              // Check required for non-sale items
              productHasSale = false;
            }
          }
        });

        if(productHasSale == true) {
          //puts the slash through the old item price
          var itemPrice = Shopify.formatMoney(productFinalPrice, $('body').data('money-format')) + ' </span><span class="money was_price">' + Shopify.formatMoney(productCompareAtPrice, $('body').data('money-format')) + '</span>';
          cart_items_html += '<span class="money sale">' + itemPrice + '</strong>';

          // Total savings
          saving = (productCompareAtPrice - productFinalPrice) * item.quantity;
          total_saving = saving + total_saving;
        } else {
          if (item.price > item.final_price) {
            //puts the slash through the old item price
            var itemPrice = Shopify.formatMoney(item.final_price, $('body').data('money-format')) + ' </span><span class="money was_price">' + Shopify.formatMoney(item.price, $('body').data('money-format')) + '</span>';
            cart_items_html += '<span class="money sale">' + itemPrice + '</strong>';
          } else {
            var itemPrice = Shopify.formatMoney(item.price, $('body').data('money-format'));
            cart_items_html += '<span class="money">' + itemPrice + '</span></strong>';
          }
        }

        if (item.price > item.final_price) {
          cart_items_html += discountMessage;
        }

        cart_items_html += '<div class="left product-quantity-box">';
        cart_items_html += '<span class="ss-icon product-minus js-change-quantity" data-func="minus"><span class="icon-minus"></span></span>';
        cart_items_html += '<input type="number" min="0" class="quantity" name="updates[]" id="updates_' + item.id + '" value="' + item.quantity + '" data-cart-quantity-input="mini-cart" />';
        cart_items_html += '<span class="ss-icon product-plus js-change-quantity" data-func="plus"><span class="icon-plus"></span></span>';
        cart_items_html += '</div></div></div>';
        cart_items_html += '<a href="/cart/change?line=' + line_id + '&amp;quantity=0" class="js-cart-remove-btn cart__remove-btn" data-line-id="' + line_id + '" data-remove-item="mini-cart"><span class="remove-icon"></span></a>';

      });

      var cartDiscounts = cart.cart_level_discount_applications;
      var cartDiscountMessage = "";

      for (i=0; i < cartDiscounts.length; i++) {
        var amount = Shopify.formatMoney(cartDiscounts[i].total_allocated_amount, $('body').data('money-format'));
        var title = cartDiscounts[i].title;

        cart_discounts_html += '<span class="cart_discounts--title">' + title + '</span>';
        cart_discounts_html += '<span class="cart_discounts--price">';
        cart_discounts_html += '-<span class="money">' + amount + '</span></span>';
      }

      cart_action_html += '<span class="right"><span class="money">' + Shopify.formatMoney(cart.total_price, $('body').data('money-format')) + '</span></span>' + '<span>' + Shopify.translation.cart_subtotal_text + '</span>';
      total_saving = total_saving + cart.total_discount;
      if(Shopify.theme_settings.display_savings && total_saving > 0) {
        cart_savings_html = '<span class="right"><span class="money">' + Shopify.formatMoney(total_saving, $('body').data('money-format')) + '</span></span>' +
          '<span>' + Shopify.translation.cart_savings_text + '</span>';
      } else {
        cart_savings_html = "";
      }
    }

    $('.js-cart_items').html(cart_items_html);
    $('.js-cart_discounts').html(cart_discounts_html);
    $('.js-cart_subtotal').html(cart_action_html);
    $('.js-cart_savings').html(cart_savings_html);

    if (Shopify.theme_settings.show_multiple_currencies){
      convertCurrencies();
    }
  }

  $(document).on('click', '.ajax-submit', function(e) {
    e.preventDefault();
    var $addToCartForm = $(this).closest('form');
    var $addToCartBtn = $addToCartForm.find('.add_to_cart');

    //Refresh page on quick shop add to cart if on cart page
    if($('body').hasClass('cart')) {
      $addToCartForm.submit();
    }
    
    let formAction = $addToCartForm[0].action;    
    if (formAction.includes("add")) {
      $.ajax({
        url: '/cart/add.js',
        dataType: 'json',
        cache: false,
        type: 'post',
        data: $addToCartForm.serialize(),
        beforeSend: function() {
          $addToCartBtn.attr('disabled', 'disabled').addClass('disabled');
          $addToCartBtn.find('span').removeClass("fadeInDown").addClass('animated zoomOut');
        },
        success: function(itemData) {
          $addToCartBtn.find('.checkmark').addClass('checkmark-active');

          window.setTimeout(function(){
            $addToCartBtn.removeAttr('disabled').removeClass('disabled');
            $addToCartBtn.find('.checkmark').removeClass('checkmark-active');
            $addToCartBtn.find('span').removeClass('zoomOut').addClass('fadeInDown');
          }, 1000);

          $.ajax({
            url: '/cart.js',
            dataType: "json",
            cache: false,
            success: function(cart) {
              setTimeout(function() {
                refreshCart(cart);
                if($('body').hasClass('fancybox-active')) {
                  $.fancybox.close();
                }

                if($('#header').is(':visible')) {
                  $('#header .cart_container').addClass('active_link');
                } else if ($('.sticky_nav--stick').length) {
                  $('.sticky_nav .cart_container').addClass('active_link');
                } else {
                  $('.top_bar .cart_container').addClass('active_link');
                }

                //block scrolling on mobile
                if ($(window).width() <= 798) {
                  var $cart_container = $(this).parent();
                  if($cart_container.hasClass('active_link')) {
                    $('body').addClass('blocked-scroll');
                  } else {
                    $('body').addClass('blocked-scroll');
                  }
                }
              }, 500)
            }
          });
        },
        error: function(XMLHttpRequest) {
          var response = eval('(' + XMLHttpRequest.responseText + ')');
          response = response.description;
          $('.warning').remove();

          var warning = '<p class="warning animated bounceIn">' + response.replace('All 1 ', 'All ') + '</p>';
          $addToCartForm.after(warning);
          $addToCartBtn.removeAttr('disabled').removeClass('disabled');
          $addToCartBtn.find('span').text(Shopify.translation.add_to_cart).removeClass('zoomOut').addClass('zoomIn');
        }
      });   
    }
    else{
      console.log("Test");
      $.ajax({
        url: '/cart',
        dataType: 'json',
        cache: false,
        type: 'post',
        data: $addToCartForm.serialize(),
        beforeSend: function() {
          $addToCartBtn.attr('disabled', 'disabled').addClass('disabled');
          $addToCartBtn.find('span').removeClass("fadeInDown").addClass('animated zoomOut');
        },
        success: function(itemData) {
          $addToCartBtn.find('.checkmark').addClass('checkmark-active');

          window.setTimeout(function(){
            $addToCartBtn.removeAttr('disabled').removeClass('disabled');
            $addToCartBtn.find('.checkmark').removeClass('checkmark-active');
            $addToCartBtn.find('span').removeClass('zoomOut').addClass('fadeInDown');
          }, 1000);

          $.ajax({
            url: '/cart.js',
            dataType: "json",
            cache: false,
            success: function(cart) {
              setTimeout(function() {
                refreshCart(cart);
                if($('body').hasClass('fancybox-active')) {
                  $.fancybox.close();
                }

                if($('#header').is(':visible')) {
                  $('#header .cart_container').addClass('active_link');
                } else if ($('.sticky_nav--stick').length) {
                  $('.sticky_nav .cart_container').addClass('active_link');
                } else {
                  $('.top_bar .cart_container').addClass('active_link');
                }

                //block scrolling on mobile
                if ($(window).width() <= 798) {
                  var $cart_container = $(this).parent();
                  if($cart_container.hasClass('active_link')) {
                    $('body').addClass('blocked-scroll');
                  } else {
                    $('body').addClass('blocked-scroll');
                  }
                }
              }, 500)
            }
          });
        },
        error: function(XMLHttpRequest) {
          var response = eval('(' + XMLHttpRequest.responseText + ')');
          response = response.description;
          $('.warning').remove();

          var warning = '<p class="warning animated bounceIn">' + response.replace('All 1 ', 'All ') + '</p>';
          $addToCartForm.after(warning);
          $addToCartBtn.removeAttr('disabled').removeClass('disabled');
          $addToCartBtn.find('span').text(Shopify.translation.add_to_cart).removeClass('zoomOut').addClass('zoomIn');
        }
      });
    }
    return false;
  });


  function incrementValue(idid)
  {

    var value = parseInt(document.getElementById(idid).value, 10);
    value = isNaN(value) ? 0 : value;
    value++;
    document.getElementById(idid).value = value;
  }

  function decrementValue(idid)
  {

    var value = parseInt(document.getElementById(idid).value, 10);
    value = isNaN(value) ? 0 : value;
    value--;
    document.getElementById(idid).value = value;
  }
</script>
